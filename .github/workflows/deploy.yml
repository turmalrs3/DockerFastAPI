name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Fazendo checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configurando o Docker Buildx (necessário para construir a imagem)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Passo 3: Fazendo login no Docker Hub (ou AWS ECR)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Armazenado em GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Armazenado em GitHub Secrets

      # Passo 4: Construindo a imagem Docker e fazendo o push
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dockerfastapi-web:${{ github.sha }}  # Usando o SHA do commit como versão

      - name: Configure SSH access to Bastion Host
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            echo "StrictHostKeyChecking no" >> ~/.ssh/config
            echo "UserKnownHostsFile /dev/null" >> ~/.ssh/config

      - name: Deploy via Bastion Host
        run: |
         ssh -i ~/.ssh/id_rsa -o ProxyCommand="ssh -i ~/.ssh/id_rsa -W %h:%p  ubuntu@44.201.110.145" \
            ubuntu@10.0.20.208 << 'EOF'
            docker pull dockerfastapi-web:tag
            docker stop meu-container || true
            docker rm meu-container || true
            docker run -d --name meu-container -p 8004:8004 dockerfastapi-web:tag
         EOF